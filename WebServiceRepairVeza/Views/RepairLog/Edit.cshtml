@model WebService.Models.ViewModels.RepairLog.RepairLogViewModel
@inject BLL.Services.RepairGroupService RepairGroupService
@{
    ViewData["Title"] = "Edit";
}
<h2></h2>

<a href='@ViewData["returnUrl"]' class="btn btn-outline-dark">Вернуться</a>

<h1>Изменение</h1>

<h4>Заявка на ремонт</h4>
<hr />
<div class="row">
    <form class="d-flex flex-column gap-2 needs-validation-checkboxes" novalidate asp-action="Edit">
        <input type="hidden" asp-for="Id" />
        <input type="hidden" asp-for="AuthorId" />
        <input type="hidden" asp-for="RequestDate" />
        <input type="hidden" asp-for="Status" />
        <input type="hidden" asp-for="Author" />
        <input type="hidden" asp-for="Comments" />
        <input type="hidden" asp-for="Executors" />
        <input type="hidden" name="returnUrl" value="@ViewData["returnUrl"]" />

        <div class="form-floating">
            <textarea rows="3" asp-for="Malfunctions" class="form-control" placeholder="Введите неисправности" id="floatingTextarea" style="min-height: 100px" required></textarea>
            <label for="floatingTextarea">@Html.DisplayNameFor(modelItem => Model.Malfunctions)</label>
            <div class="invalid-feedback">
                Введите неисправности
            </div>
        </div>
        <div class="form-group" id="controls">
            @{
                var allGroups = await RepairGroupService.GetItems();
                    @if (allGroups.Count() > 1)
                {
                        <div style="margin-left: 25px">
                            <input type="checkbox" id="checkboxAll">
                            <lable for="checkboxAll" class="form-check-label">Отметить / снять все</lable>
                        </div>
                }
                    @foreach (var group in allGroups)
                {
                        <div class="form-check">
                            <input onchange="checkRequired()" class="checkBoxClass form-check-input" id="checkbox-@group.Id" required type="checkbox" name="groups" value="@group.Name"
                               @(Model.RepairGroups.Select(gr => gr.Name).Contains(group.Name) ? "checked=\"checked\"" : "") />
                            <lable for="checkbox-@group.Id" class="form-check-label">@group.Name</lable>
                            @if (allGroups.LastOrDefault() == group)
                        {
                                <div class="invalid-feedback">
                                    Выберите хотябы одну группу
                                </div>
                        }
                        </div>
                }
            }
        </div>
        <div class="form-group">
            <input type="submit" value="Сохранить" class="btn btn-secondary" />
        </div>
    </form>
</div>

@section Scripts {
    <script type="text/javascript">
        (function($) { })(jQuery);

        function checkRequired() {
            if ($("[name='groups']:checked").length < 1) {
                $("[name='groups']").attr('required', true);
            }
            else {
                $("[name='groups']").attr('required', false);
            }
        }

        $('#checkboxAll').click(function() {
            if ($(this).is(':checked')) {
                $('#controls input:checkbox').prop('checked', true);
            } else if (!$(this).is(':checked')) {
                $('#controls input:checkbox').prop('checked', false);
            }
        });

        $('.checkBoxClass').on('change', function() {
            if ($('.checkBoxClass:checked').length != $('.checkBoxClass').length)
                $('#checkboxAll').prop('checked', false);
            else $('#checkboxAll').prop('checked', true);
        });
    </script>
    }

@using WebService.Models.ViewModels.Account
@model RegisterViewModel

<style>
    .form-floating-group input {
        border-bottom-right-radius: 0;
        border-top-right-radius: 0;
    }

    #togglePassword1, #togglePassword2 {
        cursor: pointer;
    }
</style>

<form class="registrForm d-flex flex-column gap-2 needs-validation" novalidate method="post" asp-controller="Account" asp-action="Register">
    <legend>Впервые здесь?</legend>
    <div class="form-floating">
        <input asp-for="UserName" class="form-control" id="floatingInputUserName1" required />
        <label for="floatingInputValue1" class="control-label">@Html.DisplayNameFor(modelItem => Model.UserName)</label>
        <div class="invalid-feedback">
            Введите логин
        </div>
    </div>
    <div class="form-floating">
        <input asp-for="Surname" class="form-control" id="floatingInputUserName2" required />
        <label for="floatingInputValue2" class="control-label">@Html.DisplayNameFor(modelItem => Model.Surname)</label>
        <div class="invalid-feedback">
            Введите фамилию
        </div>
    </div>
    <div class="form-floating">
        <input asp-for="Name" class="form-control" id="floatingInputUserName3" required />
        <label for="floatingInputValue3" class="control-label">@Html.DisplayNameFor(modelItem => Model.Name)</label>
        <div class="invalid-feedback">
            Введите имя
        </div>
    </div>
    <div class="form-floating">
        <input asp-for="MiddleName" class="form-control" id="floatingInputUserName4" required />
        <label for="floatingInputValue4" class="control-label">@Html.DisplayNameFor(modelItem => Model.MiddleName)</label>
        <div class="invalid-feedback">
            Введите отчество
        </div>
    </div>
    <div class="form-floating">
        <input asp-for="PhoneNumber" id="phone" class="form-control" id="floatingInputUserName5" required />
        <label for="floatingInputValue5" class="control-label">@Html.DisplayNameFor(modelItem => Model.PhoneNumber)</label>
        <div class="invalid-feedback">
            Введите номер телефона
        </div>
    </div>
    <div class="input-group">
        <div class="form-floating form-floating-group flex-grow-1">
            <input asp-for="Password" class="form-control" id="floatingInputPassword1" required />
            <label for="floatingInputPassword1" class="control-label">@Html.DisplayNameFor(modelItem => Model.Password)</label>
            <div class="invalid-feedback">
                Введите пароль
            </div>
        </div>
        <span class="input-group-text">
            <i class="bi bi-eye-slash" id="togglePassword1"></i>
        </span>
    </div>
    <div class="input-group">
        <div class="form-floating form-floating-group flex-grow-1">
            <input asp-for="PasswordConfirm" class="form-control" id="floatingInputPassword2" required />
            <label for="floatingInputPassword2" class="control-label">@Html.DisplayNameFor(modelItem => Model.PasswordConfirm)</label>
            <div class="invalid-feedback">
                Подтвердите пароль
            </div>
        </div>
        <span class="input-group-text">
            <i class="bi bi-eye-slash" id="togglePassword2"></i>
        </span>
    </div>
    <div>
        <input class="btn btn-primary btn mt-2" type="submit" value="Регистрация" />
    </div>
</form>

<script src="https://cdn.jsdelivr.net/npm/jquery@3.2.1/dist/jquery.min.js" type="text/javascript"></script>
<script src="https://cdn.jsdelivr.net/npm/jquery.maskedinput@1.4.1/src/jquery.maskedinput.js" type="text/javascript"></script>

<script>
    const togglePassword1 = document.querySelector("#togglePassword1");
    const togglePassword2 = document.querySelector("#togglePassword2");
    const password1 = document.querySelector("#floatingInputPassword1");
    const password2 = document.querySelector("#floatingInputPassword2");

    togglePassword1.addEventListener("click", function() {
        // toggle the type attribute
        const type = password1.getAttribute("type") === "password" ? "text" : "password";
        password1.setAttribute("type", type);

        // toggle the icon
        this.classList.toggle("bi-eye");
    });
    togglePassword2.addEventListener("click", function() {
        // toggle the type attribute
        const type = password2.getAttribute("type") === "password" ? "text" : "password";
        password2.setAttribute("type", type);

        // toggle the icon
        this.classList.toggle("bi-eye");
    });

    jQuery(function($) {
        $(function() {
            function maskPhone() {
                $("#phone").mask("+375(99) 999-99-99");
            }
            maskPhone();
        });
    });
</script>
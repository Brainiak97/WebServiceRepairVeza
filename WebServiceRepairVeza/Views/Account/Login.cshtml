@using WebService.Models.ViewModels.Account
@model AuthorizationViewModel

<style media="(min-width: 1400px)">
    .tab-content {
        border-left: 1px solid #ddd;
        border-right: 1px solid #ddd;
        border-bottom: 1px solid #ddd;
        padding: 10px;
    }

    .tab-content, .nav-tabs {
        margin-left: 25%;
        margin-right: 25%;
    }
</style>

<div class="row m-5 justify-content-center">
    <div class="col-sm-10 col-md-6">
        <nav>
            <div class="nav nav-tabs nav-fill" id="nav-tab" role="tablist">
                <button class="nav-link active" id="nav-login-tab" data-bs-toggle="tab" data-bs-target="#nav-login" type="button" role="tab" aria-controls="nav-login" aria-selected="true">Вход</button>
                <button class="nav-link" id="nav-register-tab" data-bs-toggle="tab" data-bs-target="#nav-register" type="button" role="tab" aria-controls="nav-register" aria-selected="false">Регистрация</button>
            </div>
        </nav>
        <div class="tab-content" id="nav-tabContent">
            <div class="tab-pane fade show @(Model.LoginViewModel == null ? "" : " active")" id="nav-login" role="tabpanel" aria-labelledby="nav-login-tab">
                @{
                    await Html.RenderPartialAsync("LoginPartial", Model.LoginViewModel);
                }
            </div>
            <div class="tab-pane fade @(Model.RegisterViewModel == null ? "" : " active")" id="nav-register" role="tabpanel" aria-labelledby="nav-register-tab">
                @{
                    await Html.RenderPartialAsync("RegisterPartial", Model.RegisterViewModel);
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        (function() {
            'use strict';
            window.addEventListener('load', function() {
                // Fetch all the forms we want to apply custom Bootstrap validation styles to
                var forms = document.getElementsByClassName('needs-validation');
                // Loop over them and prevent submission
                var validation = Array.prototype.filter.call(forms, function(form) {
                    form.addEventListener('submit', function(event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();
    </script>
    }
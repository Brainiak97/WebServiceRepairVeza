@using WebService.Models.ViewModels.Account
@model LoginViewModel

<style>
    .form-floating-group input {
        border-bottom-right-radius: 0;
        border-top-right-radius: 0;
    }

    #togglePasswordLogin {
        cursor: pointer;
    }
</style>

<h2></h2>

<div class="container row-cols-lg-3 d-flex justify-content-center">
    <form class="loginForm d-flex flex-column gap-2 needs-validation" novalidate method="post" asp-controller="Account" asp-action="Login" asp-route-returnUrl="@Model?.ReturnUrl">
        <legend>
            Введите свои учетные данные.<br>
            @Html.ActionLink("У меня нет аккаунта", "Register")
        </legend>

        <div class="validation text-danger" asp-validation-summary="ModelOnly"></div>

        <div class="form-floating">
            <input asp-for="UserName" class="form-control" placeholder="Введите логин" id="fiUserNameLogin" required />
            <label for="fiUserNameLogin" class="control-label">@Html.DisplayNameFor(modelItem => Model.UserName)</label>
        </div>
        <div class="input-group">
            <div class="form-floating form-floating-group flex-grow-1">
                <input asp-for="Password" class="form-control" placeholder="Введите пароль" id="floatingInputPasswordLogin" required />
                <label for="floatingInputPasswordLogin" class="control-label">@Html.DisplayNameFor(modelItem => Model.Password)</label>
            </div>
            <span class="input-group-text">
                <i class="bi bi-eye-slash" id="togglePasswordLogin"></i>
            </span>
        </div>
        <div class="form-group">
            <label asp-for="RememberMe" class="control-label"></label>
            <input asp-for="RememberMe" />
        </div>
        <div>
            <input class="btn btn-primary" type="submit" value="Войти" />
        </div>
    </form>
</div>

<script>
    const togglePassword = document.querySelector("#togglePasswordLogin");
    const password = document.querySelector("#floatingInputPasswordLogin");

    togglePassword.addEventListener("click", function () {
        // toggle the type attribute
        const type = password.getAttribute("type") === "password" ? "text" : "password";
        password.setAttribute("type", type);

        // toggle the icon
        this.classList.toggle("bi-eye");
    });
</script>
